<?xml version="1.0"?>
<Definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ShipBlueprints>
    <ShipBlueprint xsi:type="MyObjectBuilder_ShipBlueprintDefinition">
      <Id Type="MyObjectBuilder_ShipBlueprintDefinition" Subtype="CannonPedestal_CP-C20" />
      <DisplayName>Sirius_Z</DisplayName>
      <CubeGrids>
        <CubeGrid>
          <SubtypeName />
          <EntityId>89373657046230257</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="6745.0662889551013" y="38675.451614266749" z="-25835.739541292503" />
            <Forward x="0.99999994" y="-1.73088384E-11" z="4.76837158E-07" />
            <Up x="1.73088245E-11" y="1" z="2.7000624E-11" />
            <Orientation>
              <X>3.42656415E-12</X>
              <Y>-0.707106948</Y>
              <Z>-1.56657569E-11</Z>
              <W>0.7071066</W>
            </Orientation>
          </PositionAndOrientation>
          <LocalPositionAndOrientation xsi:nil="true" />
          <GridSizeEnum>Large</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>LargeBlockBatteryBlock</SubtypeName>
              <EntityId>111121817431549450</EntityId>
              <Min x="0" y="0" z="4" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>电池-dc-</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>3</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="0" z="1" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="0" z="2" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="0" z="3" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="0" z="1" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="0" z="2" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="0" z="3" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="0" z="1" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="0" z="2" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="0" z="3" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>LargeBlockBatteryBlock</SubtypeName>
              <EntityId>115185181202735011</EntityId>
              <Min x="1" y="0" z="4" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>电池-dc- 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>3</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_BatteryBlock">
              <SubtypeName>LargeBlockBatteryBlock</SubtypeName>
              <EntityId>130157168777491083</EntityId>
              <Min x="2" y="0" z="4" />
              <BlockOrientation Forward="Left" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>电池-dc- 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <CurrentStoredPower>3</CurrentStoredPower>
              <ProducerEnabled>true</ProducerEnabled>
              <MaxStoredPower>0</MaxStoredPower>
              <SemiautoEnabled>false</SemiautoEnabled>
              <OnlyDischargeEnabled>false</OnlyDischargeEnabled>
              <ChargeMode>0</ChargeMode>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorAdvancedStator">
              <SubtypeName>LargeAdvancedStator</SubtypeName>
              <EntityId>129943032615050939</EntityId>
              <Min x="1" y="1" z="2" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>AdvRotor_H</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>90965048850654913</TopBlockId>
              <ShareInertiaTensor>false</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <TargetVelocity>0</TargetVelocity>
              <MinAngle xsi:nil="true" />
              <MaxAngle xsi:nil="true" />
              <CurrentAngle>0.044454176</CurrentAngle>
              <LimitsActive>false</LimitsActive>
              <DummyDisplacement>-0.11</DummyDisplacement>
              <RotorLock>false</RotorLock>
              <Torque>1E+09</Torque>
              <BrakingTorque>1E+09</BrakingTorque>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="0" z="0" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="0" z="0" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorBlock</SubtypeName>
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="0" z="5" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorSlope</SubtypeName>
              <Min x="0" y="0" z="5" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorSlope</SubtypeName>
              <Min x="2" y="0" z="5" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorSlope</SubtypeName>
              <Min x="2" y="0" z="-1" />
              <BlockOrientation Forward="Backward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorSlope</SubtypeName>
              <Min x="0" y="0" z="-1" />
              <BlockOrientation Forward="Backward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="0" z="-1" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MyProgrammableBlock">
              <SubtypeName>LargeProgrammableBlock</SubtypeName>
              <EntityId>141938961148651431</EntityId>
              <Min x="1" y="1" z="-1" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyModStorageComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key>74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value>groupNameTag = Turret
elevationRotorNameTag = _V
azimuthRotorNameTag = _H
azimuthSpeedModifier = 0.5
elevationSpeedModifier = 0.5
controlSeatRelativeMouseControl = False
fireWeaponsOnCrouch = False
stabilizeAzimuth = True
stabilizeElevation = False
returnToRestPosition = False
</Value>
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>PB_TurretCtrl</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Program>
/*
/// Whip's Mouse-Aimed Rotor Turret Script v37-1 - 01.05.2019 
*/

//=============================================================
//DO NOT CHANGE VARIABLES HERE!
//CHANGE THEM IN THE CUSTOM DATA OF THIS PROGRAM THEN RECOMPILE!
//=============================================================

const string VERSION = "37.2.0";
const string DATE = "07/01/2019";

//name tag of turret groups
string groupNameTag = "MART";

//name of elevation (vertical) rotor for specific turret
string elevationRotorNameTag = "Elevation";

//name of azimuth (horizontal) rotor for specific turret
string azimuthRotorNameTag = "Azimuth";

//scales mouse input by this factor for elevation rotors
double elevationSpeedModifier = 0.25;

//scales mouse input by this factor for azimuth rotors
double azimuthSpeedModifier = 0.25;

//If the turret should attempt to cancel out unwanted angular velocity
bool stabilizeAzimuth = true;

//If the turret should attempt to cancel out unwanted angular velocity
bool stabilizeElevation = true;

//If the mouse controls should be relative to the cockpit's orientation
bool controlSeatRelativeMouseControl = true;

//If the code should fire detected weapons when you press the crouch key
bool fireWeaponsOnCrouch = true;

//If the turret should return to a rest position if not actively controlled
bool returnToRestPosition = true;


////////////////////////////////////////////////////
//=================================================
//No touchey anything below here
//=================================================
////////////////////////////////////////////////////
const double updatesPerSecond = 60;
const double timeMax = 1 / updatesPerSecond;
const double secondsPerTick = 1.0 / 60.0;
const double equilibriumRotationSpeed = 10;
const double runtimeToRealTime = (1.0 / 60.0) / 0.0166666;
double timeElapsed = 0;
const double refreshInterval = 10;
double timeSinceRefresh = 141;
bool hasTurrets = false;


Program()
{
    BuildConfig();
    config.ParseCustomData();

    Runtime.UpdateFrequency = UpdateFrequency.Update1;
}

void Main(string arg, UpdateType updateType)
{
    //-------------------------------------
    //Bandaid for DS bug
    //if ((updateType &amp; UpdateType.Once) != 0)
    //{
    //    Runtime.UpdateFrequency = UpdateFrequency.Update1;
    //}
    //-------------------------------------
    
    if ((updateType &amp; (UpdateType.Terminal | UpdateType.Script | UpdateType.Trigger)) != 0)
    {
        if (arg.Equals("setup", StringComparison.OrdinalIgnoreCase))
        {
            config.ParseCustomData();
            hasTurrets = GrabBlockGroups();
            timeSinceRefresh = 0;
        }
        
        else if (arg.Equals("rest", StringComparison.OrdinalIgnoreCase))
        {
            foreach (var turret in rotorTurretList)
                turret.GoToRest();
        }
    }

    var lastRuntime = runtimeToRealTime * Math.Max(Runtime.TimeSinceLastRun.TotalSeconds, 0);
    timeElapsed += lastRuntime; //secondsPerTick;
    timeSinceRefresh += lastRuntime; //secondsPerTick;

    if (timeElapsed &gt;= timeMax)
    {
        Echo($"WMI Mouse-Aimed Rotor\nTurret System Online{RunningSymbol()}\n(Version {VERSION} - {DATE})");

        if (!hasTurrets || timeSinceRefresh &gt;= refreshInterval) //check if we are not setup or if we have hit our refresh interval
        {
            hasTurrets = GrabBlockGroups();
            timeSinceRefresh = 0;
        }

        if (!hasTurrets) //if setup has failed
            return;

        Echo($"\nNext block refresh in {Math.Round(Math.Max(0, refreshInterval - timeSinceRefresh))} seconds");

        try
        {    
            ControlTurrets();
        }
        catch
        {
            Echo("Something broke yo");
            hasTurrets = false;
        }

        //reset time count
        timeElapsed = 0;
    }

}

List&lt;RotorTurret&gt; rotorTurretList = new List&lt;RotorTurret&gt;();

bool GrabBlockGroups()
{
    config.ParseCustomData();
    rotorTurretList.Clear();

    var groups = new List&lt;IMyBlockGroup&gt;();
    GridTerminalSystem.GetBlockGroups(groups);

    foreach (IMyBlockGroup thisGroup in groups)
    {
        if (thisGroup.Name.ToLower().Contains(groupNameTag.ToLower()))
        {
            var thisTurret = new RotorTurret(thisGroup, stabilizeAzimuth, stabilizeElevation, azimuthRotorNameTag, elevationRotorNameTag, azimuthSpeedModifier, elevationSpeedModifier, fireWeaponsOnCrouch,  controlSeatRelativeMouseControl, returnToRestPosition, timeMax, this);
            rotorTurretList.Add(thisTurret);
        }
    }

    if (rotorTurretList.Count == 0)
    {
        Echo($"[ERROR]: No '{groupNameTag}' groups found!");
        return false;
    }
    return true;
}

void ControlTurrets()
{
    foreach (var turret in rotorTurretList)
    {
        turret.Control();
    }
}

public class RotorTurret
{
    IMyMotorStator elevationRotor;
    List&lt;IMyMotorStator&gt; additionalElevationRotors = new List&lt;IMyMotorStator&gt;();
    IMyMotorStator azimuthRotor;
    List&lt;IMyShipController&gt; shipControllers = new List&lt;IMyShipController&gt;();
    List&lt;IMyTerminalBlock&gt; weaponsAndTools = new List&lt;IMyTerminalBlock&gt;(); //need to clear this
    List&lt;IMyTerminalBlock&gt; additionalWeaponsAndTools = new List&lt;IMyTerminalBlock&gt;();
    List&lt;IMyGyro&gt; gyros = new List&lt;IMyGyro&gt;();
    List&lt;IMyGyro&gt; gridGyros = new List&lt;IMyGyro&gt;();
    IMyBlockGroup thisGroup;
    public bool IsSetup { get; private set; }
    Program thisProgram;
    bool fireWeaponsOnCrouch;
    bool controlSeatRelativeMouseControl;
    string azimuthRotorNameTag;
    string elevationRotorNameTag;
    double elevationSpeedModifier;
    double azimuthSpeedModifier;
    double timeInterval;
    const double radsToRPM = 30.0 / Math.PI;
    MatrixD lastAzimuthMatrix;
    MatrixD lastElevationMatrix;
    bool firstRun = true;
    bool shouldStabilizeAz;
    bool shouldStabilizeEl;
    bool returnToRestPosition;
    bool _commandRest = false;

    public RotorTurret(IMyBlockGroup group, bool shouldStabilizeAz, bool shouldStabilizeEl, string azimuthRotorNameTag, string elevationRotorNameTag, double azimuthSpeedModifier, double elevationSpeedModifier, bool fireWeaponsOnCrouch, bool controlSeatRelativeMouseControl, bool returnToRestPosition, double timeInterval, Program program)
    {
        thisGroup = group;
        thisProgram = program;
        this.fireWeaponsOnCrouch = fireWeaponsOnCrouch;
        this.azimuthRotorNameTag = azimuthRotorNameTag;
        this.elevationRotorNameTag = elevationRotorNameTag;
        this.azimuthSpeedModifier = azimuthSpeedModifier;
        this.elevationSpeedModifier = elevationSpeedModifier;
        this.controlSeatRelativeMouseControl = controlSeatRelativeMouseControl;
        this.timeInterval = timeInterval;
        this.shouldStabilizeAz = shouldStabilizeAz;
        this.shouldStabilizeEl = shouldStabilizeEl;
        this.returnToRestPosition = returnToRestPosition;
    }

    public void GrabBlocks()
    {
        var blocks = new List&lt;IMyTerminalBlock&gt;();
        thisGroup.GetBlocks(blocks);

        elevationRotor = null;
        additionalElevationRotors.Clear();
        azimuthRotor = null;
        shipControllers.Clear();
        weaponsAndTools.Clear();
        additionalWeaponsAndTools.Clear();
        gyros.Clear();

        foreach (IMyTerminalBlock thisBlock in blocks)
        {
            if (thisBlock is IMyMotorStator)
            {
                if (thisBlock.CustomName.ToLower().Contains(elevationRotorNameTag.ToLower()))
                {
                    if (thisBlock.CustomName.ToLower().Contains("main"))
                    {
                        if (elevationRotor != null)
                        {
                            additionalElevationRotors.Add(elevationRotor);
                            elevationRotor = null;
                        }
                    }
                    
                    if (elevationRotor == null) //grabs parent elevation rotor first
                    {
                        var thisRotor = thisBlock as IMyMotorStator;

                        if (thisRotor.IsAttached &amp;&amp; thisRotor.IsFunctional) //checks if elevation rotor is attached
                        {
                            thisGroup.GetBlocks(weaponsAndTools, block =&gt; block.CubeGrid == thisRotor.TopGrid &amp;&amp; IsWeaponOrTool(block));
                        }
                        if (weaponsAndTools.Count != 0)
                            elevationRotor = thisRotor;
                        else
                            additionalElevationRotors.Add(thisRotor);
                    }
                    else //then grabs any other elevation rotors it finds
                        additionalElevationRotors.Add(thisBlock as IMyMotorStator);
                }
                else if (thisBlock.CustomName.ToLower().Contains(azimuthRotorNameTag.ToLower())) //grabs azimuth rotor
                {
                    azimuthRotor = thisBlock as IMyMotorStator;
                }
            }
            else if (thisBlock is IMyShipController) //grabs ship controller
            {
                shipControllers.Add(thisBlock as IMyShipController);
            }
            else if (thisBlock is IMyGyro)
            {
                gyros.Add(thisBlock as IMyGyro);
            }
        }

        int numberOfElevationRotors = elevationRotor == null ? additionalElevationRotors.Count : additionalElevationRotors.Count + 1;
        thisProgram.Echo($"&gt; Elevation rotors: {numberOfElevationRotors}");

        bool noErrors = true;
        if (shipControllers.Count == 0)
        {
            thisProgram.Echo("\n[ERROR]: No control seat or remote control found\n");
            noErrors = false;
        }

        if (azimuthRotor == null)
        {
            thisProgram.Echo("\n[ERROR]: No azimuth rotor\n");
            noErrors = false;
        }
        else if (!azimuthRotor.IsAttached)
        {
            thisProgram.Echo($"\n[ERROR]: No rotor head for '{azimuthRotor.CustomName}'\n");
            noErrors = false;
        }

        if (elevationRotor == null)
        {
            noErrors = false;
        }

        if (weaponsAndTools.Count == 0 &amp;&amp; additionalElevationRotors.Count != 0)
        {
            thisProgram.Echo($"\n[ERROR]: No weapons or tools found\nfor rotor named '{additionalElevationRotors[0].CustomName}'\n");
            noErrors = false;
        }

        IsSetup = noErrors;
    }

    private bool IsWeaponOrTool(IMyTerminalBlock block)
    {
        if (block is IMyUserControllableGun &amp;&amp; !(block is IMyLargeTurretBase))
        {
            return true;
        }
        else if (block is IMyShipToolBase)
        {
            return true;
        }
        else if (block is IMyShipDrill)
        {
            return true;
        }
        else if (block is IMyLightingBlock)
        {
            return true;
        }
        else if (block is IMyCameraBlock)
        {
            return true;
        }
        else
        {
            return false;
        }
    }

    public void Control()
    {
        thisProgram.Echo($"________________________\nGroup: '{thisGroup.Name}'");

        GrabBlocks();
        if (!IsSetup)
        {
            StopRotorMovement(thisGroup); //stops rotors from spazzing
            if (fireWeaponsOnCrouch)
                TurnOffWeapons(); //turns off any guns
            thisProgram.Echo("Turret is OFFLINE");
        }
        else
        {
            //control rotors
            bool underControl = TurretControl();
            if (additionalElevationRotors.Count != 0)
                thisProgram.Echo($"&gt; Main elevation rotor:\n  '{elevationRotor.CustomName}'");
            thisProgram.Echo($"&gt; Turret is {(underControl ? "active" : "idle")}");  
        }
    }

    private bool TurretControl()
    {
        var turretController = GetControlledShipController(shipControllers);

        if (!turretController.IsUnderControl)
        {
            if (returnToRestPosition)
            {
                ReturnToEquilibrium();
                foreach (var block in gyros)
                {
                    block.GyroOverride = false;
                }
                return false;
            }

            StopRotorMovement(thisGroup);
            foreach (var additionalElevationRotor in additionalElevationRotors)
            {
                if (!additionalElevationRotor.IsAttached) //checks if opposite elevation rotor is attached
                {
                    thisProgram.Echo($"\n&gt; No rotor head for additional elevation\nrotor named '{additionalElevationRotor.CustomName}'\nSkipping this rotor...\n");
                    continue;
                }

                thisGroup.GetBlocks(additionalWeaponsAndTools, block =&gt; block.CubeGrid == additionalElevationRotor.TopGrid &amp;&amp; IsWeaponOrTool(block));
                if (additionalWeaponsAndTools.Count == 0)
                {
                    thisProgram.Echo($"\n&gt; No weapons or tools for additional elevation\nrotor named '{additionalElevationRotor.CustomName}'\nSkipping this rotor...\n");
                    continue;
                }
            }

            return false;
        }
        
        if (_commandRest)
        {
            returnToRestPosition = _returnToRestPositionCached;
            _commandRest = false;
        }

        //get orientation of turret
        IMyTerminalBlock turretReference = weaponsAndTools[0];
        Vector3D turretFrontVec = turretReference.WorldMatrix.Forward;
        Vector3D absUpVec = azimuthRotor.WorldMatrix.Up;
        Vector3D turretSideVec = elevationRotor.WorldMatrix.Up;
        Vector3D turretFrontCrossSide = turretFrontVec.Cross(turretSideVec);

        //check elevation rotor orientation w.r.t. reference
        //double yawMult = 1;
        double pitchMult = 1;

        if (absUpVec.Dot(turretFrontCrossSide) &gt; 0)
        {
            pitchMult = -1;
        }

        Vector3D WASDinputVec = turretController.MoveIndicator;
        var mouseInput = turretController.RotationIndicator;

        //converting mouse input to angular velocity (simple Proportional controller)
        //rotors have their own inherent damping so Derivative term isnt all that important
        double azimuthSpeed = azimuthSpeedModifier * mouseInput.Y;// * yawMult;
        double elevationSpeed = elevationSpeedModifier * mouseInput.X * pitchMult;

        double adjustedAzimuthSpeed = azimuthSpeed;
        double adjustedElevationSpeed = elevationSpeed;
        var controllerWorldMatrix = turretController.WorldMatrix;
        var shipMatrix = MatrixD.Zero;

        if (controlSeatRelativeMouseControl)
        {
            if (controllerWorldMatrix.Left.Dot(absUpVec) &gt; 0.7071)
            {
                adjustedAzimuthSpeed = -elevationSpeed * pitchMult;
                adjustedElevationSpeed = azimuthSpeed * pitchMult;
            }
            else if (controllerWorldMatrix.Right.Dot(absUpVec) &gt; 0.7071)
            {
                adjustedAzimuthSpeed = elevationSpeed * pitchMult;
                adjustedElevationSpeed = -azimuthSpeed * pitchMult;
            }
            else if (controllerWorldMatrix.Down.Dot(absUpVec) &gt; 0.7071)
            {
                adjustedAzimuthSpeed = -azimuthSpeed;
                adjustedElevationSpeed = -elevationSpeed;
            }
            
            shipMatrix.Up = controllerWorldMatrix.Up;
            var forward = VectorRejection(turretFrontVec, shipMatrix.Up);
            if (!Vector3D.IsUnit(ref forward))
                forward.Normalize(); //mutable structs REEEE
            shipMatrix.Forward = forward;
            shipMatrix.Left = Vector3D.Cross(shipMatrix.Up, shipMatrix.Forward);
            
        }
        else
        {
            shipMatrix.Up = absUpVec;
            var forward = VectorRejection(turretFrontVec, shipMatrix.Up);
            if (!Vector3D.IsUnit(ref forward))
                forward.Normalize(); //mutable structs REEEE
            shipMatrix.Forward = forward;
            shipMatrix.Left = Vector3D.Cross(shipMatrix.Up, shipMatrix.Forward);
        }

        //Compute rotor stabilization velocities
        double azimuthStabilizationVelocity = 0;
        double elevationStabilizationVelocity = 0;
        if (shouldStabilizeAz || shouldStabilizeEl)
        {
            if (firstRun)
            {
                firstRun = false;
                lastElevationMatrix = elevationRotor.WorldMatrix;
                lastAzimuthMatrix = azimuthRotor.WorldMatrix;
            }
            else
            {
                if (shouldStabilizeAz)
                {
                    var azimuthError = CalculateRotorDeviationAngle(azimuthRotor.WorldMatrix.Forward, lastAzimuthMatrix);
                    azimuthStabilizationVelocity = azimuthError / timeInterval * radsToRPM;
                }
                
                if (shouldStabilizeEl)
                {
                    var elevationError = CalculateRotorDeviationAngle(elevationRotor.WorldMatrix.Forward, lastElevationMatrix);
                    elevationStabilizationVelocity = elevationError / timeInterval * radsToRPM;
                }

                lastElevationMatrix = elevationRotor.WorldMatrix;
                lastAzimuthMatrix = azimuthRotor.WorldMatrix;
            }   
        }

        //thisProgram.Echo($"shouldStabilizeAz: {shouldStabilizeAz}\nazimuthStabilizationVelocity: {azimuthStabilizationVelocity}\nelevationStabilizationVelocity: {elevationStabilizationVelocity}");

        //apply rotor velocities
        float finalAzimuthSpeed = (float)adjustedAzimuthSpeed + (float)azimuthStabilizationVelocity;
        float finalElevationSpeed = (float)adjustedElevationSpeed + (float)elevationStabilizationVelocity;
        
        azimuthRotor.TargetVelocityRPM = finalAzimuthSpeed;
        elevationRotor.TargetVelocityRPM = finalElevationSpeed;
        
        azimuthRotor.Enabled = true;
        elevationRotor.Enabled = true;

        //gyro assistance
        GetListBlocksOnGrid(azimuthRotor.TopGrid, gyros, gridGyros);
        ApplyGyroOverride(0, azimuthSpeed, 0, gridGyros, shipMatrix);
        
        GetListBlocksOnGrid(elevationRotor.TopGrid, gyros, gridGyros);
        ApplyGyroOverride(elevationSpeed, azimuthSpeed, 0, gridGyros, shipMatrix);
        

        //Determine how to move opposite elevation rotor (if any)
        foreach (var additionalElevationRotor in additionalElevationRotors)
        {

            if (!additionalElevationRotor.IsAttached) //checks if opposite elevation rotor is attached
            {
                thisProgram.Echo($"\n&gt; No rotor head for additional elevation\nrotor named '{additionalElevationRotor.CustomName}'\nSkipping this rotor...\n");
                continue;
            }

            thisGroup.GetBlocks(additionalWeaponsAndTools, block =&gt; block.CubeGrid == additionalElevationRotor.TopGrid &amp;&amp; IsWeaponOrTool(block));

            if (additionalWeaponsAndTools.Count == 0)
            {
                thisProgram.Echo($"\n&gt; No weapons or tools for additional elevation\nrotor named '{additionalElevationRotor.CustomName}'\nSkipping this rotor...\n");
                continue;
            }

            var oppositeFrontVec = additionalWeaponsAndTools[0].WorldMatrix.Forward;

            float multiplier = -1f;
            if (additionalElevationRotor.WorldMatrix.Up.Dot(elevationRotor.WorldMatrix.Up) &gt; 0)
                multiplier = 1f;

            //flattens the opposite elevation rotor's forward vec onto the rotation plane of the parent elevation rotor
            var oppositePlanar = oppositeFrontVec - VectorProjection(oppositeFrontVec, turretSideVec);

            //Angular difference between elevation and additionalElevation rotor
            var diff = (float)VectorAngleBetween(oppositePlanar, turretFrontVec) * Math.Sign(oppositePlanar.Dot(turretFrontCrossSide)) * 100;                                                                                                                                               //w/h-i+p!l_a#s$h%1^4&amp;1                                                             

            //Apply velocity while compensating for angular error
            //This syncs the movement of all elevation rotors!
            additionalElevationRotor.Enabled = true;
            additionalElevationRotor.TargetVelocityRPM = (multiplier * (float)finalElevationSpeed - multiplier * diff);
            
            GetListBlocksOnGrid(additionalElevationRotor.TopGrid, gyros, gridGyros);
            ApplyGyroOverride(finalElevationSpeed - diff, finalAzimuthSpeed, 0, gyros, shipMatrix);

            if (fireWeaponsOnCrouch)
            {
                //control weapons
                if (WASDinputVec.Y &lt; 0)
                {
                    ControlWeaponsAndTools(additionalWeaponsAndTools, true);
                }
                else
                {
                    ControlWeaponsAndTools(additionalWeaponsAndTools, false);
                }
            }
        }

        //control weapons
        if (fireWeaponsOnCrouch)
        {
            if (WASDinputVec.Y &lt; 0)
            {
                ControlWeaponsAndTools(weaponsAndTools, true);
            }
            else
            {
                ControlWeaponsAndTools(weaponsAndTools, false);
            }
        }
        
        return true;
    }

    //Whip's ApplyGyroOverride Method v10 - 8/19/17
    void ApplyGyroOverride(double pitch_speed, double yaw_speed, double roll_speed, List&lt;IMyGyro&gt; gyro_list, MatrixD shipMatrix) 
    { 
        var rotationVec = new Vector3D(-pitch_speed, yaw_speed, roll_speed); //because keen does some weird stuff with signs 
        var relativeRotationVec = Vector3D.TransformNormal(rotationVec, shipMatrix); 

        foreach (var thisGyro in gyro_list) 
        { 
            var transformedRotationVec = Vector3D.TransformNormal(relativeRotationVec, Matrix.Transpose(thisGyro.WorldMatrix)); 
     
            thisGyro.Pitch = (float)transformedRotationVec.X;
            thisGyro.Yaw = (float)transformedRotationVec.Y; 
            thisGyro.Roll = (float)transformedRotationVec.Z; 
            thisGyro.GyroOverride = true; 
        } 
    }

    void GetListBlocksOnGrid&lt;T&gt;(IMyCubeGrid grid, List&lt;T&gt; list, List&lt;T&gt; result) where T : class, IMyTerminalBlock
    {
        result.Clear();
        foreach (var block in list)
        {
            if (block.CubeGrid == grid)
                result.Add(block);
        }
    }
    
    private double CalculateRotorDeviationAngle(Vector3D forwardVector, MatrixD lastOrientation)
    {
        var flattenedForwardVector = VectorRejection(forwardVector, lastOrientation.Up);
        return VectorAngleBetween(flattenedForwardVector, lastOrientation.Forward) * Math.Sign(flattenedForwardVector.Dot(lastOrientation.Left));
    }

    private Vector3D VectorProjection(Vector3D a, Vector3D b)
    {
        return a.Dot(b) / b.LengthSquared() * b;
    }

    private Vector3D VectorRejection(Vector3D a, Vector3D b) //reject a on b    
    {
        if (Vector3D.IsZero(b))
            return Vector3D.Zero;

        return a - a.Dot(b) / b.LengthSquared() * b;
    }

    private double VectorAngleBetween(Vector3D a, Vector3D b) //returns radians 
    {
        if (Vector3D.IsZero(a) || Vector3D.IsZero(b))
            return 0;
        else
            return Math.Acos(MathHelper.Clamp(a.Dot(b) / Math.Sqrt(a.LengthSquared() * b.LengthSquared()), -1, 1));
    }

    private void TurnOffWeapons()
    {
        thisGroup.GetBlocks(additionalWeaponsAndTools, block =&gt; IsWeaponOrTool(block));
        ControlWeaponsAndTools(additionalWeaponsAndTools, false);
    }

    private void ControlWeaponsAndTools(List&lt;IMyTerminalBlock&gt; weaponsAndTools, bool shouldEnable)
    {
        if (shouldEnable)
        {
            for (int i = 0; i &lt; weaponsAndTools.Count; i++)
            {
                var weapon = weaponsAndTools[i] as IMyUserControllableGun;
                weapon?.ApplyAction("Shoot_On");
                weapon?.ApplyAction("ShootOnce");
                var tool = weaponsAndTools[i] as IMyShipToolBase;
                tool?.ApplyAction("OnOff_On");
                var light = weaponsAndTools[i] as IMyLightingBlock;
                light?.ApplyAction("OnOff_On");
            }
        }
        else
        {
            for (int i = 0; i &lt; weaponsAndTools.Count; i++)
            {
                var weapon = weaponsAndTools[i] as IMyUserControllableGun;
                weapon?.ApplyAction("Shoot_Off");
                var tool = weaponsAndTools[i] as IMyShipToolBase;
                tool?.ApplyAction("OnOff_Off");
                var light = weaponsAndTools[i] as IMyLightingBlock;
                light?.ApplyAction("OnOff_Off");
            }
        }
    }

    private void StopRotorMovement(IMyBlockGroup thisGroup)
    {
        azimuthRotor?.SetValue("Velocity", 0f);
        elevationRotor?.SetValue("Velocity", 0f);

        foreach (var additionalElevationRotor in additionalElevationRotors)
            additionalElevationRotor?.SetValue("Velocity", 0f);

        var blocks = new List&lt;IMyTerminalBlock&gt;();
        thisGroup.GetBlocks(blocks, IsWeaponOrTool);
        ControlWeaponsAndTools(blocks, false);
    }

    private IMyShipController GetControlledShipController(List&lt;IMyShipController&gt; SCs)
    {
        foreach (IMyShipController thisController in SCs)
        {
            if (thisController.IsUnderControl &amp;&amp; thisController.CanControlShip)
                return thisController;
        }

        return SCs[0];
    }
    
    bool _returnToRestPositionCached = false;
    public void GoToRest()
    {
        _returnToRestPositionCached = returnToRestPosition;
        returnToRestPosition = true;
        _commandRest = true;
    }
    
    void ReturnToEquilibrium()
    {
        MoveRotorToEquilibrium(azimuthRotor);
        MoveRotorToEquilibrium(elevationRotor);

        foreach (var block in additionalElevationRotors)
        {
            MoveRotorToEquilibrium(block);
        }
    }

    void MoveRotorToEquilibrium(IMyMotorStator rotor)
    {
        if (rotor == null)
            return;

        double restAngle = 0;
        if (!string.IsNullOrEmpty(rotor.CustomData) &amp;&amp; double.TryParse(rotor.CustomData, out restAngle))
        {
            var currentAngle = rotor.Angle;
            var restAngleRad = MathHelper.ToRadians((float)restAngle) % MathHelper.TwoPi;
            
            if (rotor.LowerLimitRad &gt;= -MathHelper.TwoPi &amp;&amp; rotor.UpperLimitRad &lt;= MathHelper.TwoPi)
            {
                if (restAngleRad &gt; rotor.UpperLimitRad)
                    restAngleRad -= MathHelper.TwoPi;
                else if (restAngleRad &lt; rotor.LowerLimitRad)
                    restAngleRad += MathHelper.TwoPi;
            }
            else
            {
                if (restAngleRad &gt; currentAngle + Math.PI)
                    restAngleRad -= MathHelper.TwoPi;
                else if (restAngleRad &lt; currentAngle - Math.PI)
                    restAngleRad += MathHelper.TwoPi;
            }
            
            
            var angularDeviation = (restAngleRad - currentAngle);
            rotor.TargetVelocityRPM = (float)Math.Round(angularDeviation * equilibriumRotationSpeed, 2);
           
            if (Math.Abs(angularDeviation) &gt; 1e-2)
            {
                if (!rotor.Enabled)
                {
                    rotor.Enabled = true;
                }
            }
        }
        else if (rotor.LowerLimitRad &gt;= -MathHelper.TwoPi &amp;&amp; rotor.UpperLimitRad &lt;= MathHelper.TwoPi)
        {
            var avgAngle = (rotor.LowerLimitRad + rotor.UpperLimitRad) * 0.5;
            var currentAngle = rotor.Angle;
            avgAngle %= MathHelper.TwoPi;
            currentAngle %= MathHelper.TwoPi;

            var angularDeviation = (avgAngle - currentAngle);
            var targetVelocity = angularDeviation * equilibriumRotationSpeed;
            rotor.TargetVelocityRPM = (float)Math.Round(targetVelocity, 2);
            
            if (Math.Abs(angularDeviation) &lt; 1e-2)
            {
                if (rotor.Enabled)
                {
                    rotor.Enabled = false;
                }
            }
            else
            {
                if (!rotor.Enabled)
                {
                    rotor.Enabled = true;
                }
            }
        }
        else
        {
            rotor.TargetVelocityRPM = 0f;
        }
    }
    
    static void WrapAngleAroundPI(ref float angle)
    {
        angle %= MathHelper.TwoPi;
        
        if (angle &gt; Math.PI)
            angle = -MathHelper.TwoPi + angle;
        else if (angle &lt; -Math.PI)
            angle = MathHelper.TwoPi + angle;
    }
    
    static double GetAllowedRotationAngle(double initialAngle, IMyMotorStator rotor)
    {
        if (rotor.LowerLimitRad &gt;= -MathHelper.TwoPi &amp;&amp; rotor.UpperLimitRad &lt;= MathHelper.TwoPi &amp;&amp; rotor.UpperLimitRad - rotor.LowerLimitRad &gt; Math.PI)
        {
            var currentAngleVector = GetVectorFromRotorAngle(rotor.Angle, rotor);
            var lowerLimitVector = GetVectorFromRotorAngle(rotor.LowerLimitRad, rotor);
            var upperLimitVector = GetVectorFromRotorAngle(rotor.UpperLimitRad, rotor);

            var upAxis = Vector3D.Cross(upperLimitVector, lowerLimitVector);
            var currentCrossLower = Vector3D.Cross(currentAngleVector, lowerLimitVector);
            var currentCrossUpper = Vector3D.Cross(currentAngleVector, lowerLimitVector);

            var angleToLowerLimit = Math.Acos(Vector3D.Dot(lowerLimitVector, currentAngleVector));
            if (Vector3D.Dot(upAxis, currentCrossLower) &gt; 0)
                angleToLowerLimit = MathHelper.TwoPi - angleToLowerLimit;

            var angleToUpperLimit = Math.Acos(Vector3D.Dot(upperLimitVector, currentAngleVector));
            if (Vector3D.Dot(upAxis, currentCrossUpper) &lt; 0)
                angleToUpperLimit = MathHelper.TwoPi - angleToUpperLimit;

            if (initialAngle &gt; 0) //rotating towards lower bounding
            {
                if (angleToLowerLimit &lt; Math.Abs(initialAngle))
                {
                    var newAngle = -MathHelper.TwoPi + initialAngle;
                    if (angleToUpperLimit &lt; Math.Abs(newAngle))
                        return 0;

                    return newAngle; //rotate opposite direction
                }
            }
            else
            {
                if (angleToUpperLimit &lt; Math.Abs(initialAngle))
                {
                    var newAngle = MathHelper.TwoPi + initialAngle;
                    if (angleToLowerLimit &lt; Math.Abs(newAngle))
                        return 0;

                    return newAngle;//rotate opposite direction
                }
            }

            return initialAngle; //conditional fall-through
        }
        else
            return initialAngle;
    }
    
    static Vector3D GetVectorFromRotorAngle(float angle, IMyMotorStator rotor)
    {
        double x = MyMath.FastSin(angle);
        double y = MyMath.FastCos(angle);
        var rotorMatrix = rotor.WorldMatrix;
        return rotorMatrix.Backward * y + rotor.WorldMatrix.Left * x;
    }
}

//Whip's Running Symbol Method v8
//•
int runningSymbolVariant = 0;
int runningSymbolCount = 0;
const int increment = 20;
string[] runningSymbols = new string[] {".", "..", "...", "....", "...", "..", ".", ""};

string RunningSymbol()
{
    if (runningSymbolCount &gt;= increment)
    {
        runningSymbolCount = 0;
        runningSymbolVariant++;
        if (runningSymbolVariant &gt;= runningSymbols.Length)
            runningSymbolVariant = 0;
    }
    runningSymbolCount++;
    return runningSymbols[runningSymbolVariant];
}


#region VARIABLE CONFIG
VariableConfig config;
void BuildConfig()
{
    config = new VariableConfig(this);

    /*
    ----------------------------------------------------------------------------------
    Syntax for Adding Variables:
    ----------------------------------------------------------------------------------
    
    config.AddVariable(nameof(VARIABLE), () =&gt; VARIABLE, x =&gt; { VARIABLE = (TYPE)x; });
    
        &gt; VARIABLE is your variable and TYPE is the variable type
    */
    config.AddVariable(nameof(groupNameTag), () =&gt; groupNameTag, x =&gt; { groupNameTag = (string)x; });
    config.AddVariable(nameof(elevationRotorNameTag), () =&gt; elevationRotorNameTag, x =&gt; { elevationRotorNameTag = (string)x; });
    config.AddVariable(nameof(azimuthRotorNameTag), () =&gt; azimuthRotorNameTag, x =&gt; { azimuthRotorNameTag = (string)x; });
    config.AddVariable(nameof(azimuthSpeedModifier), () =&gt; azimuthSpeedModifier, x =&gt; { azimuthSpeedModifier = (double)x; });
    config.AddVariable(nameof(elevationSpeedModifier), () =&gt; elevationSpeedModifier, x =&gt; { elevationSpeedModifier = (double)x; });
    config.AddVariable(nameof(controlSeatRelativeMouseControl), () =&gt; controlSeatRelativeMouseControl, x =&gt; { controlSeatRelativeMouseControl = (bool)x; });
    config.AddVariable(nameof(fireWeaponsOnCrouch), () =&gt; fireWeaponsOnCrouch, x =&gt; { fireWeaponsOnCrouch = (bool)x; });
    config.AddVariable(nameof(stabilizeAzimuth), () =&gt; stabilizeAzimuth, x =&gt; { stabilizeAzimuth = (bool)x; });
    config.AddVariable(nameof(stabilizeElevation), () =&gt; stabilizeElevation, x =&gt; { stabilizeElevation = (bool)x; });
    config.AddVariable(nameof(returnToRestPosition), () =&gt; returnToRestPosition, x =&gt; { returnToRestPosition = (bool)x; });
}

public class VariableConfig
{
    Program _program = null;
    public Dictionary&lt;string, VariableReference&gt; configurationDict = new Dictionary&lt;string, VariableReference&gt;();
    StringBuilder outputSB = new StringBuilder();
    StringBuilder customDataSB = new StringBuilder();
    bool _verbose = false;

    public VariableConfig(Program program, bool verbose = false)
    {
        this._program = program;
        _verbose = verbose;
    }

    public void AddVariable(string variableName, Func&lt;object&gt; getter, Action&lt;object&gt; setter) //ref T thisVariable) where T : struct
    {
        var referenceToVariable = new VariableReference(getter, setter);
        configurationDict.Add(variableName, referenceToVariable);
    }

    public bool UpdateVariable(string variableName, object newVariable)
    {
        if (!configurationDict.ContainsKey(variableName))
            return false;

        configurationDict[variableName].Set(newVariable);
        return true;
    }

    public void ParseCustomData()
    {
        outputSB.Clear();
        outputSB.Append("Parsing Config...\n");
        var customDataSplit = _program.Me.CustomData.Split('\n');

        foreach (var line in customDataSplit)
        {
            var words = line.Split('=');
            if (words.Length == 2)
            {
                var variableName = words[0].Trim();
                var variableValue = words[1].Trim();

                VariableReference reference;
                bool hasValue = configurationDict.TryGetValue(variableName, out reference);
                if (hasValue)
                {
                    var variable = reference.Get();
                    bool parsed = ParseString(variableValue, ref variable);
                    configurationDict[variableName].Set(variable);
                    if (parsed)
                    {
                        outputSB.Append($"&gt; Parsed {variableName}\n");
                        configurationDict[variableName].Set(variable);
                    }
                    else
                    {
                        outputSB.Append($"&gt;&gt; ERROR: Failed to parse {variableName} (value: {variableValue})\n");
                    }
                }
            }
            else
            {
                if (!string.IsNullOrWhiteSpace(line))
                outputSB.Append($"&gt;&gt; Error: '{line}' not correct length\n");
            }
        }
        outputSB.Append("Parsing Complete!");

        if (_verbose)
            _program.Echo(outputSB.ToString());
        Write();
    }

    bool ParseString(string variableString, ref object variable)
    {
        if (variable is bool)
        {
            bool temp;
            if (bool.TryParse(variableString, out temp))
            {
                variable = temp;
                return true;
            }
        }
        else if (variable is float)
        {
            float temp;
            if (float.TryParse(variableString, out temp))
            {
                variable = temp;
                return true;
            }
        }
        else if (variable is double)
        {
            double temp;
            if (double.TryParse(variableString, out temp))
            {
                variable = temp;
                return true;
            }
        }
        else if (variable is int)
        {
            int temp;
            if (int.TryParse(variableString, out temp))
            {
                variable = temp;
                return true;
            }
        }
        else if (variable is Vector3D)
        {
            Vector3D temp;
            if (Vector3D.TryParse(variableString, out temp))
            {
                variable = temp;
                return true;
            }
        }
        else if (variable is string)
        {
            variable = variableString;
            return true;
        }
        return false;
    }

    public void Write()
    {
        customDataSB.Clear();
        foreach (var kvp in configurationDict)
        {
            customDataSB.Append($"{kvp.Key} = {kvp.Value.Get()}\n");
        }
        _program.Me.CustomData = customDataSB.ToString();
    }
}

//https://stackoverflow.com/questions/24329012/store-reference-to-an-object-in-dictionary
public sealed class VariableReference
{
    public Func&lt;object&gt; Get { get; private set; }
    public Action&lt;object&gt; Set { get; private set; }
    public VariableReference(Func&lt;object&gt; getter, Action&lt;object&gt; setter)
    {
        Get = getter;
        Set = setter;
    }
}
#endregion

</Program>
              <Storage />
              <TextPanels>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
              </TextPanels>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Cockpit">
              <SubtypeName>CockpitOpen</SubtypeName>
              <EntityId>113112885446428171</EntityId>
              <Min x="1" y="1" z="0" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>1</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanReceive CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                  <ComponentData>
                    <TypeId>MyModStorageComponent</TypeId>
                    <Component xsi:type="MyObjectBuilder_ModStorageComponent">
                      <Storage>
                        <dictionary>
                          <item>
                            <Key>74de02b3-27f9-4960-b1c4-27351f2b06d1</Key>
                            <Value />
                          </item>
                        </dictionary>
                      </Storage>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>飞行座椅-fxzy- 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <UseSingleWeaponMode>false</UseSingleWeaponMode>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>Reverse</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>113112885446428171</BlockEntityId>
                      <GroupName>Pistons_main</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>2</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>Attach</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>113112885446428171</BlockEntityId>
                      <GroupName>Rotor_main</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>3</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TriggerNow</Action>
                      <BlockEntityId>96336156319707231</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>4</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>Detach</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>113112885446428171</BlockEntityId>
                      <GroupName>Rotor_main</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>5</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>HingeLock</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>113112885446428171</BlockEntityId>
                      <GroupName>Vs</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>6</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>Reverse</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>113112885446428171</BlockEntityId>
                      <GroupName>Pistons_LIFT</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>7</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>109134771772154770</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>8</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>110935619122388655</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>Reverse</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>73712469530400165</BlockEntityId>
                      <GroupName>Pistons_main</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>Reverse</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>73712469530400165</BlockEntityId>
                      <GroupName>Pistons_TOP</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>2</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Attach</Action>
                      <BlockEntityId>133750786437420693</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>3</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TriggerNow</Action>
                      <BlockEntityId>88611997202845987</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>4</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Detach</Action>
                      <BlockEntityId>133750786437420693</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>5</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>RotorLock</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>73712469530400165</BlockEntityId>
                      <GroupName>Vs</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>6</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>Reverse</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>73712469530400165</BlockEntityId>
                      <GroupName>Pistons_LIFT</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>7</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>View</Action>
                      <BlockEntityId>92032564356460098</BlockEntityId>
                    </Data>
                  </Slot>
                </SlotsGamepad>
              </Toolbar>
              <SelectedGunId xsi:nil="true" />
              <BuildToolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
                <SlotsGamepad />
              </BuildToolbar>
              <PilotRelativeWorld>
                <Position x="-0.54533284902572632" y="-0.46696808934211731" z="-2.4352624416351318" />
                <Forward x="0.110055164" y="-0.476655543" z="0.8721738" />
                <Up x="0.0278533082" y="0.878638744" z="0.47667405" />
                <Orientation>
                  <X>-8.11895152E-05</X>
                  <Y>0.9675159</Y>
                  <Z>0.246334389</Z>
                  <W>-0.0568544567</W>
                </Orientation>
              </PilotRelativeWorld>
              <PilotGunDefinition xsi:nil="true" />
              <IsInFirstPersonView>true</IsInFirstPersonView>
              <OxygenLevel>0</OxygenLevel>
              <PilotJetpackEnabled xsi:nil="true" />
              <TextPanels>
                <MySerializedTextPanelData>
                  <ChangeInterval>0</ChangeInterval>
                  <Font Type="MyObjectBuilder_FontDefinition" Subtype="Debug" />
                  <FontSize>1</FontSize>
                  <ShowText>NONE</ShowText>
                  <FontColor>
                    <PackedValue>4294967295</PackedValue>
                    <X>255</X>
                    <Y>255</Y>
                    <Z>255</Z>
                    <R>255</R>
                    <G>255</G>
                    <B>255</B>
                    <A>255</A>
                  </FontColor>
                  <BackgroundColor>
                    <PackedValue>4278190080</PackedValue>
                    <X>0</X>
                    <Y>0</Y>
                    <Z>0</Z>
                    <R>0</R>
                    <G>0</G>
                    <B>0</B>
                    <A>255</A>
                  </BackgroundColor>
                  <CurrentShownTexture>0</CurrentShownTexture>
                  <SelectedScript />
                  <TextPadding>2</TextPadding>
                  <ScriptBackgroundColor>
                    <PackedValue>4288108544</PackedValue>
                    <X>0</X>
                    <Y>88</Y>
                    <Z>151</Z>
                    <R>0</R>
                    <G>88</G>
                    <B>151</B>
                    <A>255</A>
                  </ScriptBackgroundColor>
                  <ScriptForegroundColor>
                    <PackedValue>4294962611</PackedValue>
                    <X>179</X>
                    <Y>237</Y>
                    <Z>255</Z>
                    <R>179</R>
                    <G>237</G>
                    <B>255</B>
                    <A>255</A>
                  </ScriptForegroundColor>
                  <Sprites>
                    <Length>0</Length>
                  </Sprites>
                </MySerializedTextPanelData>
              </TextPanels>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_RadioAntenna">
              <SubtypeName>LargeBlockRadioAntenna</SubtypeName>
              <EntityId>136176428045571069</EntityId>
              <Min x="3" y="0" z="0" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>天线-tx-</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <BroadcastRadius>5000</BroadcastRadius>
              <ShowShipName>false</ShowShipName>
              <EnableBroadcasting>true</EnableBroadcasting>
              <AttachedPB>0</AttachedPB>
              <IgnoreAllied>false</IgnoreAllied>
              <IgnoreOther>true</IgnoreOther>
              <HudText />
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="1" z="3" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>LargeHeavyBlockArmorSlope2Tip</SubtypeName>
              <Min x="1" y="1" z="1" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <IsStatic>true</IsStatic>
          <BlockGroups>
            <MyObjectBuilder_BlockGroup>
              <Name>Turret</Name>
              <Blocks>
                <Vector3I>
                  <X>1</X>
                  <Y>1</Y>
                  <Z>2</Z>
                </Vector3I>
                <Vector3I>
                  <X>1</X>
                  <Y>1</Y>
                  <Z>0</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
          </BlockGroups>
          <DisplayName>CannonPedestal_CP-C20</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>1344</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>127842533569524853</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="6739.589020860265" y="38678.041413431973" z="-25833.761192888818" />
            <Forward x="0.0444407761" y="-4.466617E-06" z="-0.999012" />
            <Up x="6.35426659E-06" y="1" z="-4.188367E-06" />
            <Orientation>
              <X>-2.16428066E-06</X>
              <Y>-0.02222588</Y>
              <Z>-3.12980342E-06</Z>
              <W>0.999753</W>
            </Orientation>
          </PositionAndOrientation>
          <LocalPositionAndOrientation xsi:nil="true" />
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorAdvancedRotor">
              <SubtypeName>SmallAdvancedRotor</SubtypeName>
              <EntityId>90965048850654913</EntityId>
              <BuiltBy>144115188075855895</BuiltBy>
              <ParentEntityId>129943032615050939</ParentEntityId>
              <YieldLastComponent>false</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="2" z="1" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="2" z="0" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="2" z="0" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="2" z="0" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="2" z="2" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="2" z="2" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorAdvancedStator">
              <SubtypeName>MediumHinge</SubtypeName>
              <EntityId>114673799648714341</EntityId>
              <Min x="0" y="3" z="0" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>HInge_V</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>95192423742222723</TopBlockId>
              <ShareInertiaTensor>true</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <RotorEntityId xsi:nil="true" />
              <WeldedEntityId xsi:nil="true" />
              <TargetVelocity>0</TargetVelocity>
              <MinAngle>-1.57079637</MinAngle>
              <MaxAngle>1.57079637</MaxAngle>
              <CurrentAngle>-0.1340905</CurrentAngle>
              <LimitsActive>true</LimitsActive>
              <RotorLock>false</RotorLock>
              <Torque>1E+09</Torque>
              <BrakingTorque>1E+09</BrakingTorque>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>80312881596990699</EntityId>
              <Min x="-1" y="2" z="-2" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Timer_04</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
                <SlotsGamepad />
              </Toolbar>
              <Delay>1000</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>false</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>72931895294093721</EntityId>
              <Min x="0" y="2" z="-2" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Timer_03</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff_On</Action>
                      <BlockEntityId>96336156319707231</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff_On</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>72931895294093721</BlockEntityId>
                      <GroupName>Decorations</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>2</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff_Off</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>72931895294093721</BlockEntityId>
                      <GroupName>Welders</GroupName>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad />
              </Toolbar>
              <Delay>3000</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>false</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="0" y="2" z="1" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>96336156319707231</EntityId>
              <Min x="4" y="2" z="-2" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Timer_FIRE</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff_On</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>96336156319707231</BlockEntityId>
                      <GroupName>Guns</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>Safety</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>96336156319707231</BlockEntityId>
                      <GroupName>Warheads_main</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>2</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>ShootOnce</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>96336156319707231</BlockEntityId>
                      <GroupName>Guns</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>4</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>Detach</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>96336156319707231</BlockEntityId>
                      <GroupName>Rotors_main</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>6</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TriggerNow</Action>
                      <BlockEntityId>114033513657443059</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>7</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff_Off</Action>
                      <BlockEntityId>96336156319707231</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>8</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Start</Action>
                      <BlockEntityId>80312881596990699</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad />
              </Toolbar>
              <Delay>5000</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>false</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>100805963258527748</EntityId>
              <Min x="1" y="2" z="-2" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Timer_02</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>Attach</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>100805963258527748</BlockEntityId>
                      <GroupName>Rotor_main</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>IncreaseLowerLimit</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>100805963258527748</BlockEntityId>
                      <GroupName>Pistons_main</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>4</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>Retract</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>100805963258527748</BlockEntityId>
                      <GroupName>Pistons_main</GroupName>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad />
              </Toolbar>
              <Delay>2000</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>false</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>135009458828330198</EntityId>
              <Min x="2" y="2" z="-2" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Timer_01</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Start</Action>
                      <BlockEntityId>72931895294093721</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>1</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff_On</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>135009458828330198</BlockEntityId>
                      <GroupName>Welders</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>3</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Start</Action>
                      <BlockEntityId>100805963258527748</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>4</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>Extend</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>135009458828330198</BlockEntityId>
                      <GroupName>Pistons_main</GroupName>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad />
              </Toolbar>
              <Delay>1000</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>false</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>114033513657443059</EntityId>
              <Min x="3" y="2" z="-2" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Timer_00</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>DecreaseLowerLimit</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>114033513657443059</BlockEntityId>
                      <GroupName>Pistons_main</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>2</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>TriggerNow</Action>
                      <BlockEntityId>135009458828330198</BlockEntityId>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>3</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff_Off</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>114033513657443059</BlockEntityId>
                      <GroupName>Decorations</GroupName>
                    </Data>
                  </Slot>
                  <Slot>
                    <Index>5</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalGroup">
                      <Action>OnOff_Off</Action>
                      <GridEntityId>0</GridEntityId>
                      <BlockEntityId>114033513657443059</BlockEntityId>
                      <GroupName>Guns</GroupName>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad />
              </Toolbar>
              <Delay>1000</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>false</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="2" y="2" z="1" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope2Base</SubtypeName>
              <Min x="1" y="2" z="-1" />
              <BlockOrientation Forward="Backward" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TimerBlock">
              <SubtypeName>TimerBlockSmall</SubtypeName>
              <EntityId>76366518991381786</EntityId>
              <Min x="-2" y="2" z="-2" />
              <BlockOrientation Forward="Left" Up="Up" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Timer_05</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots />
                <SlotsGamepad />
              </Toolbar>
              <Delay>10000</Delay>
              <CurrentTime>0</CurrentTime>
              <IsCountingDown>false</IsCountingDown>
              <Silent>false</Silent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="1" y="2" z="2" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_TerminalBlock">
              <SubtypeName>SmallControlPanel</SubtypeName>
              <EntityId>140661942060989357</EntityId>
              <Min x="-1" y="2" z="-3" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>控制面板-kzmb- 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <BlockGroups>
            <MyObjectBuilder_BlockGroup>
              <Name>Vs</Name>
              <Blocks>
                <Vector3I>
                  <X>1</X>
                  <Y>4</Y>
                  <Z>1</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>Turret</Name>
              <Blocks>
                <Vector3I>
                  <X>4</X>
                  <Y>2</Y>
                  <Z>-2</Z>
                </Vector3I>
                <Vector3I>
                  <X>1</X>
                  <Y>4</Y>
                  <Z>1</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
          </BlockGroups>
          <DisplayName>小型网格 8112</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>125485820723476829</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="6739.5857974410756" y="38680.603753214687" z="-25833.689980120263" />
            <Forward x="0.04405047" y="0.133683622" z="-0.9900446" />
            <Up x="0.999011457" y="2.86889372E-05" z="0.04445331" />
            <Orientation>
              <X>0.06304329</X>
              <Y>0.0316742733</Y>
              <Z>-0.7042806</Z>
              <W>0.7064072</W>
            </Orientation>
          </PositionAndOrientation>
          <LocalPositionAndOrientation xsi:nil="true" />
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MotorAdvancedRotor">
              <SubtypeName>MediumHingeHead</SubtypeName>
              <EntityId>95192423742222723</EntityId>
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
              <ParentEntityId>114673799648714341</ParentEntityId>
              <YieldLastComponent>false</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_Conveyor">
              <SubtypeName>SmallShipConveyorHub</SubtypeName>
              <EntityId>127459394751728923</EntityId>
              <Min x="-3" y="0" z="0" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ExtendedPistonBase">
              <SubtypeName>SmallPistonBase</SubtypeName>
              <EntityId>93298769494626512</EntityId>
              <Min x="-3" y="1" z="3" />
              <BlockOrientation Forward="Forward" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>Piston_lift</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <TopBlockId>117886604147387438</TopBlockId>
              <ShareInertiaTensor>true</ShareInertiaTensor>
              <SafetyDetach>5</SafetyDetach>
              <Velocity>0.1</Velocity>
              <MaxLimit>1</MaxLimit>
              <MinLimit>0</MinLimit>
              <Reverse>false</Reverse>
              <CurrentPosition>2</CurrentPosition>
              <MaxImpulseAxis>50000</MaxImpulseAxis>
              <MaxImpulseNonAxis>50000</MaxImpulseNonAxis>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="0" z="3" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="0" z="3" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="2" z="3" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="2" z="3" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-1" y="1" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorBlock</SubtypeName>
              <Min x="-2" y="1" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope</SubtypeName>
              <Min x="-1" y="2" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope</SubtypeName>
              <Min x="-1" y="0" z="4" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope</SubtypeName>
              <Min x="-2" y="0" z="4" />
              <BlockOrientation Forward="Up" Up="Backward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_CubeBlock">
              <SubtypeName>SmallHeavyBlockArmorSlope</SubtypeName>
              <Min x="-2" y="2" z="4" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ShipWelder">
              <SubtypeName>SmallShipWelder</SubtypeName>
              <EntityId>123563668359068272</EntityId>
              <Min x="-3" y="0" z="-6" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <DeformationRatio>0.5</DeformationRatio>
              <ComponentContainer>
                <Components>
                  <ComponentData>
                    <TypeId>MyInventoryBase</TypeId>
                    <Component xsi:type="MyObjectBuilder_Inventory">
                      <Items />
                      <nextItemId>0</nextItemId>
                      <Volume>3.375</Volume>
                      <Mass>9223372036854.775807</Mass>
                      <MaxItemCount>2147483647</MaxItemCount>
                      <Size xsi:nil="true" />
                      <InventoryFlags>CanSend</InventoryFlags>
                      <RemoveEntityOnEmpty>false</RemoveEntityOnEmpty>
                    </Component>
                  </ComponentData>
                </Components>
              </ComponentContainer>
              <CustomName>Welder_main</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_InteriorLight">
              <SubtypeName>SmallBlockLight_1corner</SubtypeName>
              <EntityId>75707234717899968</EntityId>
              <Min x="0" y="1" z="-2" />
              <BlockOrientation Forward="Forward" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
              <CustomName>Tool</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>false</Enabled>
              <Radius>2</Radius>
              <ReflectorRadius>120</ReflectorRadius>
              <Falloff>1</Falloff>
              <Intensity>4</Intensity>
              <BlinkIntervalSeconds>0</BlinkIntervalSeconds>
              <BlinkLenght>10</BlinkLenght>
              <BlinkOffset>0</BlinkOffset>
              <Offset>0.5</Offset>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <ConveyorLines>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="0" y="1" z="1" />
              <StartDirection>Left</StartDirection>
              <EndPosition x="-1" y="1" z="1" />
              <EndDirection>Right</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
            <MyObjectBuilder_ConveyorLine>
              <StartPosition x="-2" y="1" z="0" />
              <StartDirection>Forward</StartDirection>
              <EndPosition x="-2" y="1" z="-1" />
              <EndDirection>Backward</EndDirection>
              <Sections />
              <ConveyorLineType>LARGE_LINE</ConveyorLineType>
            </MyObjectBuilder_ConveyorLine>
          </ConveyorLines>
          <BlockGroups>
            <MyObjectBuilder_BlockGroup>
              <Name>Pistons_LIFT</Name>
              <Blocks>
                <Vector3I>
                  <X>-1</X>
                  <Y>1</Y>
                  <Z>3</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>Welders</Name>
              <Blocks>
                <Vector3I>
                  <X>-2</X>
                  <Y>1</Y>
                  <Z>-3</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
            <MyObjectBuilder_BlockGroup>
              <Name>Turret</Name>
              <Blocks>
                <Vector3I>
                  <X>0</X>
                  <Y>1</Y>
                  <Z>-2</Z>
                </Vector3I>
              </Blocks>
            </MyObjectBuilder_BlockGroup>
          </BlockGroups>
          <DisplayName>小型网格 3735</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
        <CubeGrid>
          <SubtypeName />
          <EntityId>124328197173768787</EntityId>
          <PersistentFlags>CastShadows InScene</PersistentFlags>
          <PositionAndOrientation>
            <Position x="6740.0006839156849" y="38683.407807474941" z="-25831.776344866357" />
            <Forward x="0.0440434441" y="0.133679017" z="-0.9900455" />
            <Up x="-0.00594400335" y="0.9910247" z="0.1335468" />
            <Orientation>
              <X>0.06697341</X>
              <Y>-0.0221768282</Y>
              <Z>0.00149045954</Z>
              <W>0.997507155</W>
            </Orientation>
          </PositionAndOrientation>
          <LocalPositionAndOrientation xsi:nil="true" />
          <GridSizeEnum>Small</GridSizeEnum>
          <CubeBlocks>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_PistonTop">
              <SubtypeName>SmallPistonTop</SubtypeName>
              <EntityId>117886604147387438</EntityId>
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <BuiltBy>144115188075855895</BuiltBy>
              <ParentEntityId>93298769494626512</ParentEntityId>
              <YieldLastComponent>false</YieldLastComponent>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_MergeBlock">
              <SubtypeName>SmallShipMergeBlock</SubtypeName>
              <EntityId>133740722312533258</EntityId>
              <Min x="-1" y="1" z="0" />
              <BlockOrientation Forward="Right" Up="Forward" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <CustomName>合并块-hbk-</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ButtonPanel">
              <SubtypeName>ButtonPanelSmall</SubtypeName>
              <EntityId>101559599760916418</EntityId>
              <Min x="-2" y="1" z="0" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>按钮面板-anmb- 2</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>133740722312533258</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad />
              </Toolbar>
              <AnyoneCanUse>false</AnyoneCanUse>
              <CustomButtonNames>
                <dictionary>
                  <item>
                    <Key>0</Key>
                    <Value>合并块-hbk- - 切换方块 开启/关闭</Value>
                  </item>
                </dictionary>
              </CustomButtonNames>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ButtonPanel">
              <SubtypeName>ButtonPanelSmall</SubtypeName>
              <EntityId>132263738024827632</EntityId>
              <Min x="-2" y="1" z="2" />
              <BlockOrientation Forward="Down" Up="Left" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>按钮面板-anmb- 3</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Reverse</Action>
                      <BlockEntityId>93298769494626512</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad />
              </Toolbar>
              <AnyoneCanUse>false</AnyoneCanUse>
              <CustomButtonNames>
                <dictionary>
                  <item>
                    <Key>0</Key>
                    <Value>Piston_lift - 反转</Value>
                  </item>
                </dictionary>
              </CustomButtonNames>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ButtonPanel">
              <SubtypeName>ButtonPanelSmall</SubtypeName>
              <EntityId>104624629999357649</EntityId>
              <Min x="2" y="1" z="0" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>按钮面板-anmb-</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>OnOff</Action>
                      <BlockEntityId>133740722312533258</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad />
              </Toolbar>
              <AnyoneCanUse>false</AnyoneCanUse>
              <CustomButtonNames>
                <dictionary>
                  <item>
                    <Key>0</Key>
                    <Value>合并块-hbk- - 切换方块 开启/关闭</Value>
                  </item>
                </dictionary>
              </CustomButtonNames>
            </MyObjectBuilder_CubeBlock>
            <MyObjectBuilder_CubeBlock xsi:type="MyObjectBuilder_ButtonPanel">
              <SubtypeName>ButtonPanelSmall</SubtypeName>
              <EntityId>85457190239598892</EntityId>
              <Min x="2" y="1" z="2" />
              <BlockOrientation Forward="Down" Up="Right" />
              <ColorMaskHSV x="0" y="-0.8" z="0.55" />
              <SkinSubtypeId>SciFi_Armor</SkinSubtypeId>
              <Owner>144115188075855895</Owner>
              <BuiltBy>144115188075855895</BuiltBy>
              <ShareMode>Faction</ShareMode>
              <CustomName>按钮面板-anmb-</CustomName>
              <ShowOnHUD>false</ShowOnHUD>
              <ShowInTerminal>true</ShowInTerminal>
              <ShowInToolbarConfig>true</ShowInToolbarConfig>
              <ShowInInventory>true</ShowInInventory>
              <Enabled>true</Enabled>
              <Toolbar>
                <ToolbarType>Character</ToolbarType>
                <SelectedSlot xsi:nil="true" />
                <Slots>
                  <Slot>
                    <Index>0</Index>
                    <Item />
                    <Data xsi:type="MyObjectBuilder_ToolbarItemTerminalBlock">
                      <Action>Reverse</Action>
                      <BlockEntityId>93298769494626512</BlockEntityId>
                    </Data>
                  </Slot>
                </Slots>
                <SlotsGamepad />
              </Toolbar>
              <AnyoneCanUse>false</AnyoneCanUse>
              <CustomButtonNames>
                <dictionary>
                  <item>
                    <Key>0</Key>
                    <Value>Piston_lift - 反转</Value>
                  </item>
                </dictionary>
              </CustomButtonNames>
            </MyObjectBuilder_CubeBlock>
          </CubeBlocks>
          <DisplayName>小型网格 5649</DisplayName>
          <DestructibleBlocks>true</DestructibleBlocks>
          <IsRespawnGrid>false</IsRespawnGrid>
          <LocalCoordSys>0</LocalCoordSys>
          <TargetingTargets />
        </CubeGrid>
      </CubeGrids>
      <EnvironmentType>None</EnvironmentType>
      <WorkshopId>0</WorkshopId>
      <OwnerSteamId>76561198396058445</OwnerSteamId>
      <Points>0</Points>
    </ShipBlueprint>
  </ShipBlueprints>
</Definitions>